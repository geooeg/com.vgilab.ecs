<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.2.xsd http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    <!--To enable @RequestMapping process on type level and method level-->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

    <context:component-scan base-package="com.vgilab.ecs.rest" />
    <context:annotation-config />
    <mvc:annotation-driven />
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean> 
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" />
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>
    
    <!-- Allow Exceptions to be handled in annotated methods if desired.  Otherwise fallback to the
         'restExceptionResolver' below: -->
    <bean id="annotationMethodHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
        <property name="order" value="0"/>
    </bean>
<!--    <bean id="restExceptionResolver" class="com.vgilab.ecs.spring.web.servlet.handler.RestExceptionHandler">
        <property name="order" value="100"/>
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
      <property name="errorResolver">
            <bean class="com.vgilab.ecs.spring.web.servlet.handler.DefaultRestErrorResolver">
                <property name="localeResolver" ref="localeResolver"/>
                <property name="defaultMoreInfoUrl" value="mailto:support@vgilab.com"/>
                <property name="exceptionMappingDefinitions">
                    <map>
                         404 
                        <entry key="com.vgilab.ecs.rest.exceptions.UnknownResourceException" value="404, _exmsg"/>

                         409 Conflict 
                        <entry key="com.vgilab.ecs.rest.exceptions.ResourceConflictException" value="409, _exmsg"/>

                         500 (catch all): 
                        <entry key="Throwable" value="500"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>-->
</beans>